# -*- coding: utf-8 -*-
"""nlp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LvBG5Dm4ReVbuwq7CBms34_bKrgVi4F3
"""

from datasets import load_dataset
import pandas as pd

# Loading Dataset
dataset_name = "cfilt/iitb-english-hindi"
dataset = load_dataset(dataset_name, split="train")
df.to_csv("english_hindi_dataset.csv", index=False)


# Convert to DataFrame
df = pd.DataFrame(dataset["translation"])
df.rename(columns={"en": "English", "hi": "Hindi"}, inplace=True)

df = df.head(10000)

# Compute Word Counts
df["Word Count (English)"] = df["English"].apply(lambda x: len(str(x).split()))
df["Word Count (Hindi)"] = df["Hindi"].apply(lambda x: len(str(x).split()))

# Filter Sentences
df = df[(df["Word Count (English)"].between(5, 50)) &
        (df["Word Count (Hindi)"].between(5, 50))]

# Calculate Difference
df["Difference"] = df["Word Count (English)"] - df["Word Count (Hindi)"]

# rows with difference between -10 and +10
df = df[(df["Difference"].between(-10, 10))]

# Export to Excel
df.to_excel("Assignment1.xlsx", index=False)

df = pd.read_excel("Assignment1.xlsx")
sample_df = df.sample(100, random_state=42)
sample_df.to_excel("Assignment2.xlsx", index=False)

# Commented out IPython magic to ensure Python compatibility.
# %pip install sacrebleu

from transformers import pipeline
import sacrebleu

# Loading 100 English sentences
df = pd.read_excel("Assignment2.xlsx")

# Load Translation Model
translator = pipeline("translation_en_to_hi", model="Helsinki-NLP/opus-mt-en-hi")

# Generate Hindi Translations
translations = []
for text in df["English"]:
    result = translator(text, max_length=200)
    translations.append(result[0]["translation_text"])

df["Model_Translation"] = translations

# Evaluate BLEU, CHRF, TER
references = df["Hindi"].tolist()
hypotheses = df["Model_Translation"].tolist()

bleu = sacrebleu.corpus_bleu(hypotheses, [references])
chrf = sacrebleu.corpus_chrf(hypotheses, [references])
ter = sacrebleu.corpus_ter(hypotheses, [references])

# Save scores
with open("Assignment2_Scores.txt", "w", encoding="utf-8") as f:
    f.write(f"BLEU Score: {bleu.score:.2f}\n")
    f.write(f"CHRF Score: {chrf.score:.2f}\n")
    f.write(f"TER Score: {ter.score:.2f}\n")

# Final Output
df.to_excel("Assignment2_Translations.xlsx", index=False)